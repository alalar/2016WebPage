{"version":3,"sources":["webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/users/user-form.component.html","webpack:///./src/app/users/users-table.component.html","webpack:///./src/app/users/shared/users-localstorage.ts","webpack:///./src/app/users/user-form-table-communication.service.ts","webpack:///./src/app/users/user.service.ts","webpack:///./src/app/shared/modal.component.ts","webpack:///./src/app/users/shared/user.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/not-found.component.ts","webpack:///./src/app/shared/filterby.pipe.ts","webpack:///./src/app/shared/sortby.pipe.ts","webpack:///./src/app/users/in-memory-data.service.ts","webpack:///./src/app/users/shared/async-unique-field.validator.ts","webpack:///./src/app/users/shared/password.validator.ts","webpack:///./src/app/users/user-form.component.ts","webpack:///./src/app/users/user-main.component.ts","webpack:///./src/app/users/users-table.component.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <h1 class=\\\"text-center\\\">CRUD with Angular 2</h1>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n            <user-form></user-form>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-8\\\">\\r\\n            <user-table></user-table>\\r\\n        </div>\\r\\n    <div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 157\n// module chunks = 1","module.exports = \"<div *ngIf=\\\"user==null\\\" class=\\\"alert alert-info \\\">Loading user info <span class=\\\"glyphicon glyphicon-refresh glyphicon-refresh-animate\\\"></span></div>\\r\\n<div *ngIf=\\\"user!=null\\\" class=\\\"panel panel-primary\\\">\\r\\n    <div class=\\\"panel-heading\\\">\\r\\n        <span *ngIf=\\\"user!=null && user.userId!=null\\\">Editing User {{user.userId}}</span>\\r\\n        <span *ngIf=\\\"user==null || user.userId==null\\\">Adding a new User</span>\\r\\n    </div>\\r\\n    <div class=\\\"panel-body\\\">\\r\\n        <form [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate >\\r\\n            <input type=\\\"hidden\\\" formControlName=\\\"userId\\\">\\r\\n            <div class=\\\"form-group has-feedback\\\" [ngClass]=\\\"{'has-success': userForm.controls.username.valid,'has-error':!userForm.controls.username.valid}\\\">\\r\\n                <label class=\\\"control-label\\\" for=\\\"username\\\">User Name</label>\\r\\n                <div class=\\\"input-group\\\">\\r\\n                    <span class=\\\"input-group-addon\\\">\\r\\n                        <span class=\\\"glyphicon glyphicon glyphicon-user\\\" ></span>\\r\\n                    </span>\\r\\n                    \\r\\n                    <input class=\\\"form-control\\\" formControlName=\\\"username\\\" placeholder=\\\"enter a user name\\\">\\r\\n                    <span class=\\\"glyphicon form-control-feedback\\\" [ngClass]=\\\"{'glyphicon-ok': userForm.controls.username.valid,'glyphicon-remove':!userForm.controls.username.valid}\\\"></span>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"userForm.controls.username.hasError('CheckingDuplicatedItem')\\\" class=\\\"alert alert-info \\\">Checking if username exists <span class=\\\"glyphicon glyphicon-refresh glyphicon-refresh-animate\\\"></span></div>\\r\\n                <!-- The hasError method can work with the built in validators but custom validators as well -->\\r\\n                <div *ngIf=\\\"userForm.controls.username.hasError('required')\\\" class=\\\"alert alert-danger \\\">You must include a username.</div>\\r\\n                <div *ngIf=\\\"userForm.controls.username.hasError('minlength')\\\" class=\\\"alert alert-danger \\\">Your username must be at least 5 characters long.</div>\\r\\n                <div *ngIf=\\\"userForm.controls.username.hasError('maxlength')\\\" class=\\\"alert alert-danger \\\">Your username cannot exceed 10 characters.</div>\\r\\n                <div *ngIf=\\\"userForm.controls.username.hasError('DuplicatedItem') && userForm.controls.username.value\\\" class=\\\"alert alert-danger \\\">username already exists</div>\\r\\n            </div>            \\r\\n           <div class=\\\"form-group has-feedback\\\" [ngClass]=\\\"{'has-success': userForm.controls.name.valid,'has-error':!userForm.controls.name.valid}\\\">\\r\\n                <label class=\\\"control-label\\\" for=\\\"name\\\">Full Name</label>\\r\\n                <div class=\\\"input-group\\\">\\r\\n                    <span class=\\\"input-group-addon\\\">\\r\\n                        <span class=\\\"glyphicon glyphicon glyphicon-user\\\" ></span>\\r\\n                    </span>\\r\\n                    \\r\\n                    <input class=\\\"form-control\\\" formControlName=\\\"name\\\" placeholder=\\\"enter full name\\\">\\r\\n                    <span class=\\\"glyphicon form-control-feedback\\\" [ngClass]=\\\"{'glyphicon-ok': userForm.controls.name.valid,'glyphicon-remove':!userForm.controls.name.valid}\\\"></span>\\r\\n                </div>\\r\\n                <!-- The hasError method can work with the built in validators but custom validators as well -->\\r\\n                <div *ngIf=\\\"userForm.controls.name.hasError('required')\\\" class=\\\"alert alert-danger \\\">You must include a full name.</div>\\r\\n                <div *ngIf=\\\"userForm.controls.name.hasError('minlength')\\\" class=\\\"alert alert-danger \\\">Your name must be at least 5 characters long.</div>\\r\\n                <div *ngIf=\\\"userForm.controls.name.hasError('maxlength')\\\" class=\\\"alert alert-danger \\\">Your name cannot exceed 10 characters.</div>\\r\\n            </div> \\r\\n             <div class=\\\"form-group has-feedback\\\" [ngClass]=\\\"{'has-success': userForm.controls.address.valid,'has-error':!userForm.controls.address.valid }\\\">\\r\\n                <label class=\\\"control-label\\\" for=\\\"address\\\">address</label>\\r\\n                <div class=\\\"input-group\\\">\\r\\n                    <span class=\\\"input-group-addon\\\">\\r\\n                        <span class=\\\"glyphicon glyphicon glyphicon-road\\\" ></span>\\r\\n                    </span>\\r\\n                    <input class=\\\"form-control\\\" formControlName=\\\"address\\\" placeholder=\\\"enter an address\\\">\\r\\n                    <span class=\\\"glyphicon form-control-feedback\\\" [ngClass]=\\\"{'glyphicon-ok': userForm.controls.address.valid,'glyphicon-remove':!userForm.controls.address.valid}\\\"></span>\\r\\n                </div>\\r\\n                <!-- The hasError method can work with the built in validators but custom validators as well -->\\r\\n                <div *ngIf=\\\"userForm.controls.address.hasError('required')\\\" class=\\\"alert alert-danger \\\">You must include an address.</div>\\r\\n            </div> \\r\\n            <div class=\\\"form-group has-feedback\\\" [ngClass]=\\\"{'has-success': userForm.controls.city.valid,'has-error':!userForm.controls.city.valid}\\\">\\r\\n                <label class=\\\"control-label\\\" for=\\\"city\\\">city</label>\\r\\n                <div class=\\\"input-group\\\">\\r\\n                    <span class=\\\"input-group-addon\\\">\\r\\n                        <span class=\\\"glyphicon glyphicon glyphicon-map-marker\\\" ></span>\\r\\n                    </span>\\r\\n                    <input class=\\\"form-control\\\" formControlName=\\\"city\\\" placeholder=\\\"enter a city\\\">\\r\\n                    <span class=\\\"glyphicon form-control-feedback\\\" [ngClass]=\\\"{'glyphicon-ok': userForm.controls.city.valid,'glyphicon-remove':!userForm.controls.city.valid}\\\"></span>\\r\\n                </div>\\r\\n                <!-- The hasError method can work with the built in validators but custom validators as well -->\\r\\n                <div *ngIf=\\\"userForm.controls.city.hasError('required')\\\" class=\\\"alert alert-danger \\\">You must include a city.</div>\\r\\n            </div>   \\r\\n            <div class=\\\"form-group has-feedback\\\" [ngClass]=\\\"{'has-success': userForm.controls.phone.valid,'has-error':!userForm.controls.phone.valid}\\\">\\r\\n                <label class=\\\"control-label\\\" for=\\\"phone\\\">phone</label>\\r\\n                <div class=\\\"input-group\\\">\\r\\n                    <span class=\\\"input-group-addon\\\">\\r\\n                        <span class=\\\"glyphicon glyphicon glyphicon-phone\\\" ></span>\\r\\n                    </span>\\r\\n                    <input class=\\\"form-control\\\" formControlName=\\\"phone\\\" placeholder=\\\"enter a phone number\\\">\\r\\n                    <span class=\\\"glyphicon form-control-feedback\\\" [ngClass]=\\\"{'glyphicon-ok': userForm.controls.phone.valid,'glyphicon-remove':!userForm.controls.phone.valid}\\\"></span>\\r\\n                </div>\\r\\n                <!-- The hasError method can work with the built in validators but custom validators as well -->\\r\\n                <div *ngIf=\\\"userForm.controls.phone.hasError('required')\\\" class=\\\"alert alert-danger \\\">You must include a phone number.</div>\\r\\n                <div *ngIf=\\\"userForm.controls.phone.hasError('pattern') && userForm.controls.phone.value\\\" class=\\\"alert alert-danger \\\">Phone number is made of 9 digits</div>\\r\\n            </div>                     \\r\\n            <div class=\\\"form-group has-feedback\\\" [ngClass]=\\\"{'has-success': userForm.controls.email.valid,'has-error':!userForm.controls.email.valid}\\\">\\r\\n                <label class=\\\"control-label\\\" for=\\\"email\\\">Email</label>\\r\\n                <div class=\\\"input-group\\\">\\r\\n                    <span class=\\\"input-group-addon\\\">\\r\\n                        @\\r\\n                    </span>\\r\\n                    <input class=\\\"form-control\\\" formControlName=\\\"email\\\" placeholder=\\\"enter an email\\\">\\r\\n                    <span class=\\\"glyphicon form-control-feedback\\\" [ngClass]=\\\"{'glyphicon-ok': userForm.controls.email.valid,'glyphicon-remove':!userForm.controls.email.valid}\\\"></span>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"userForm.controls.email.hasError('CheckingDuplicatedItem')\\\" class=\\\"alert alert-info \\\">Checking if email exists <span class=\\\"glyphicon glyphicon-refresh glyphicon-refresh-animate\\\"></span></div>\\r\\n                <!-- The hasError method can work with the built in validators but custom validators as well -->\\r\\n                <div *ngIf=\\\"userForm.controls.email.hasError('required')\\\" class=\\\"alert alert-danger \\\">You must include a user email.</div>\\r\\n                <div *ngIf=\\\"userForm.controls.email.hasError('email') && userForm.controls.email.value\\\" class=\\\"alert alert-danger \\\">Your user email is not valid</div>\\r\\n                <div *ngIf=\\\"userForm.controls.email.hasError('DuplicatedItem') && userForm.controls.email.value\\\" class=\\\"alert alert-danger \\\">Email already exists</div>\\r\\n            </div> \\r\\n            <div class=\\\"form-group has-feedback\\\" [ngClass]=\\\"{'has-success': (userForm.controls.confirmPassword.value == userForm.controls.password.value) && userForm.controls.confirmPassword.value!=null?userForm.controls.confirmPassword.value.length>0:false,'has-error':(userForm.controls.confirmPassword.value != userForm.controls.password.value) || !userForm.controls.password.valid}\\\">\\r\\n                <label class=\\\"control-label\\\" for=\\\"password\\\">Password</label>\\r\\n                <div class=\\\"input-group\\\">\\r\\n                    <span class=\\\"input-group-addon\\\">\\r\\n                        <span class=\\\"glyphicon glyphicon glyphicon-lock\\\" ></span>\\r\\n                    </span>\\r\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" placeholder=\\\"enter a password\\\">\\r\\n                    <span class=\\\"glyphicon form-control-feedback\\\" [ngClass]=\\\"{'glyphicon-ok': (userForm.controls.confirmPassword.value == userForm.controls.password.value) && userForm.controls.confirmPassword.value!=null?userForm.controls.confirmPassword.value.length>0:false,'glyphicon-remove':(userForm.controls.confirmPassword.value != userForm.controls.password.value)}\\\"></span>\\r\\n                </div>\\r\\n                <!-- The hasError method can work with the built in validators but custom validators as well -->\\r\\n                <div *ngIf=\\\"userForm.controls.password.hasError('required')\\\" class=\\\"alert alert-danger \\\">You must include a password</div>\\r\\n                <div *ngIf=\\\"userForm.controls.password.hasError('pattern')\\\" class=\\\"alert alert-danger \\\">Password length must be at least 8 chars, 1 Uppercase letter, 1 Lowercase letter and 1 digit</div>\\r\\n            </div>    \\r\\n             <div class=\\\"form-group has-feedback\\\" [ngClass]=\\\"{'has-success': (userForm.controls.confirmPassword.value == userForm.controls.password.value) && userForm.controls.confirmPassword.value!=null?userForm.controls.confirmPassword.value.length>0:false,'has-error':(userForm.controls.confirmPassword.value != userForm.controls.password.value)}\\\">\\r\\n                <label class=\\\"control-label\\\" for=\\\"confirmPassword\\\">Confirm Password</label>\\r\\n                <div class=\\\"input-group\\\">\\r\\n                    <span class=\\\"input-group-addon\\\">\\r\\n                        <span class=\\\"glyphicon glyphicon glyphicon-lock\\\" ></span>\\r\\n                    </span>\\r\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"confirmPassword\\\" placeholder=\\\"reenter the password\\\">\\r\\n                    <span class=\\\"glyphicon form-control-feedback\\\" [ngClass]=\\\"{'glyphicon-ok': (userForm.controls.confirmPassword.value == userForm.controls.password.value) && userForm.controls.confirmPassword.value!=null?userForm.controls.confirmPassword.value.length>0:false,'glyphicon-remove':(userForm.controls.confirmPassword.value != userForm.controls.password.value)}\\\"></span>\\r\\n                </div>\\r\\n                <!-- The hasError method can work with the built in validators but custom validators as well -->\\r\\n                <div *ngIf=\\\"userForm.controls.confirmPassword.hasError('MatchPassword')\\\" class=\\\"alert alert-danger \\\">Passwords must be identical</div>\\r\\n            </div> \\r\\n            <div *ngFor=\\\"let e of errors\\\" class=\\\"alert alert-danger \\\">\\r\\n                {{e}}\\r\\n            </div>                          \\r\\n            <button type=\\\"submit\\\"\\r\\n            [disabled]=\\\"!userForm.valid || userForm.pristine\\\" class=\\\"btn btn-success\\\">Save\\r\\n            <span *ngIf=\\\"submitting\\\" class=\\\"glyphicon glyphicon-refresh glyphicon-refresh-animate\\\"></span>    \\r\\n            </button> &nbsp;\\r\\n            <button type=\\\"reset\\\" (click)=\\\"revert()\\\"\\r\\n            [disabled]=\\\"userForm.pristine\\\" class=\\\"btn btn-danger\\\">Revert</button>\\r\\n            <button  *ngIf=\\\"user!=null && user.userId!=null\\\" type=\\\"button\\\" (click)=\\\"addNewUser();\\\"\\r\\n                class=\\\"pull-right btn btn-warning\\\">New <span class=\\\"glyphicon glyphicon glyphicon-user\\\" ></span></button>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/users/user-form.component.html\n// module id = 158\n// module chunks = 1","module.exports = \"\\r\\n<div  class=\\\"panel panel-primary\\\">    \\r\\n    <div class=\\\"panel-heading\\\">\\r\\n        <h3 class=\\\"panel-title text-center\\\">Users \\r\\n            <button class=\\\"btn btn-success btn-xs clickable filter pull-right\\\" data-toggle=\\\"tooltip\\\" title=\\\"Show Filter\\\" (click)=\\\"showFilterBox=!showFilterBox;\\\">\\r\\n                &nbsp;<span class=\\\"glyphicon glyphicon-filter\\\"></span>&nbsp;\\r\\n            </button>\\r\\n        </h3>\\r\\n    </div>\\r\\n    <div class=\\\"panel-body\\\" [hidden]=\\\"!showFilterBox\\\">\\r\\n        \\r\\n            <div class=\\\"form-group\\\" >\\r\\n                <div class=\\\"col-sm-11 col-xs-10\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" #filterControl (keyup)=\\\"0\\\"   placeholder=\\\"Enter the text to search\\\"/>\\r\\n                </div>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary col-sm-1 col-xs-1 text-center\\\"><span class=\\\"glyphicon glyphicon-search\\\"></span></button>\\r\\n            </div>\\r\\n        </div> \\r\\n        <div class=\\\"table-responsive\\\">         \\r\\n            <table class=\\\"table table-striped table-hover\\\">\\r\\n                <thead class=\\\"thead-inverse\\\">\\r\\n                    <th><button class=\\\"btn-block btn-link\\\" (click)=\\\"sortingByColumn('userId')\\\">ID\\r\\n                            <span class=\\\"glyphicon  pull-right \\\" \\r\\n                            [ngClass]=\\\"{'glyphicon-sort greyText': sortedByFieldName!='userId', 'glyphicon-sort-by-attributes': sortedByFieldName=='userId' && ascendingOrder, 'glyphicon-sort-by-attributes-alt': sortedByFieldName=='userId' && !ascendingOrder}\\\"></span>\\r\\n                        </button>\\r\\n                    </th>\\r\\n                    <th><button class=\\\"btn-block btn-link\\\" (click)=\\\"sortingByColumn('username')\\\">Name\\r\\n                            <span class=\\\"glyphicon  pull-right \\\" \\r\\n                            [ngClass]=\\\"{'glyphicon-sort greyText': sortedByFieldName!='username', 'glyphicon-sort-by-attributes': sortedByFieldName=='username' && ascendingOrder, 'glyphicon-sort-by-attributes-alt': sortedByFieldName=='username' && !ascendingOrder}\\\"></span>\\r\\n                        </button>\\r\\n                    </th>\\r\\n                    <th><button class=\\\"btn-block btn-link\\\" (click)=\\\"sortingByColumn('name')\\\">Full name\\r\\n                        <span class=\\\"glyphicon  pull-right \\\" \\r\\n                            [ngClass]=\\\"{'glyphicon-sort greyText': sortedByFieldName!='name', 'glyphicon-sort-by-attributes': sortedByFieldName=='name' && ascendingOrder, 'glyphicon-sort-by-attributes-alt': sortedByFieldName=='name' && !ascendingOrder}\\\"></span>\\r\\n                        </button>\\r\\n                    </th>\\r\\n                    <th><button class=\\\"btn-block btn-link\\\" (click)=\\\"sortingByColumn('address')\\\">Address\\r\\n                        <span class=\\\"glyphicon  pull-right \\\" \\r\\n                            [ngClass]=\\\"{'glyphicon-sort greyText': sortedByFieldName!='address', 'glyphicon-sort-by-attributes': sortedByFieldName=='address' && ascendingOrder, 'glyphicon-sort-by-attributes-alt': sortedByFieldName=='address' && !ascendingOrder}\\\"></span>\\r\\n                        </button>\\r\\n                    </th>\\r\\n                    <th><button class=\\\"btn-block btn-link\\\" (click)=\\\"sortingByColumn('city')\\\">City\\r\\n                        <span class=\\\"glyphicon  pull-right \\\" \\r\\n                            [ngClass]=\\\"{'glyphicon-sort greyText': sortedByFieldName!='city', 'glyphicon-sort-by-attributes': sortedByFieldName=='city' && ascendingOrder, 'glyphicon-sort-by-attributes-alt': sortedByFieldName=='city' && !ascendingOrder}\\\"></span>\\r\\n                        </button>\\r\\n                    </th>\\r\\n                    <th><button class=\\\"btn-block btn-link\\\" (click)=\\\"sortingByColumn('phone')\\\">Phone\\r\\n                        <span class=\\\"glyphicon  pull-right \\\" \\r\\n                            [ngClass]=\\\"{'glyphicon-sort greyText': sortedByFieldName!='phone', 'glyphicon-sort-by-attributes': sortedByFieldName=='phone' && ascendingOrder, 'glyphicon-sort-by-attributes-alt': sortedByFieldName=='phone' && !ascendingOrder}\\\"></span>\\r\\n                        </button>\\r\\n                    </th>\\r\\n                    <th><button class=\\\"btn-block btn-link\\\" (click)=\\\"sortingByColumn('email')\\\">Email\\r\\n                        <span class=\\\"glyphicon  pull-right \\\" \\r\\n                            [ngClass]=\\\"{'glyphicon-sort greyText': sortedByFieldName!='email', 'glyphicon-sort-by-attributes': sortedByFieldName=='email' && ascendingOrder, 'glyphicon-sort-by-attributes-alt': sortedByFieldName=='email' && !ascendingOrder}\\\"></span>\\r\\n                        </button>\\r\\n                    </th>\\r\\n                    <th></th>\\r\\n                </thead>\\r\\n                <tbody *ngIf=\\\"users==null\\\">\\r\\n                    <tr>\\r\\n                        <td colspan=8 class=\\\"alert alert-info text-center\\\">\\r\\n                            Loading users info <span class=\\\"glyphicon glyphicon-refresh glyphicon-refresh-animate\\\"></span>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n                <tbody *ngIf=\\\"users!=null || true\\\" >\\r\\n                    <tr *ngFor='let user of users | async | filterby : filterControl.value | sortby : sortedByFieldName : ascendingOrder'>\\r\\n                        <td>{{user.userId}}</td>\\r\\n                        <td>{{user.username}}</td>\\r\\n                        <td>{{user.name}}</td>\\r\\n                        <td>{{user.address}}</td>\\r\\n                        <td>{{user.city}}</td>\\r\\n                        <td>{{user.phone}}</td>\\r\\n                        <td>{{user.email}}</td>\\r\\n                        <td>\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-link\\\" title=\\\"edit\\\" (click)=\\\"userFormTableService.editingItem(user.userId)\\\" ><span role=\\\"button\\\" aria-hidden=\\\"true\\\" class=\\\"glyphicon glyphicon glyphicon-pencil\\\" ></span></button>\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-link\\\" title=\\\"remove\\\" (click)=\\\"showRemoveModalDlg(user)\\\">  <span class=\\\"text-danger glyphicon glyphicon glyphicon-remove\\\" ></span></button>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n            \\r\\n        </div>\\r\\n</div>\\r\\n     <app-modal>\\r\\n    </app-modal>\\r\\n    \\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/users/users-table.component.html\n// module id = 159\n// module chunks = 1","import { User } from './user'\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/of'\r\n\r\nfunction getUsersFromLocalStorage():User[] {\r\n    try {\r\n         if (localStorage.getItem(\"users\")) {\r\n            return JSON.parse(localStorage.getItem(\"users\"));\r\n        }\r\n    } catch(e) {\r\n        return null;\r\n    }\r\n}\r\nfunction setUsersToLocalStorage(users:User[]) {\r\n    try {\r\n         localStorage.setItem(\"users\", JSON.stringify(users))\r\n    } catch(e) {\r\n    }\r\n}\r\nfunction getHighestId(users:User[]):number {\r\n    return Math.max(...users.map((user:User) => user.userId));\r\n}\r\n\r\nexport function getLocalStorageUsers(users:User[]):Observable<User[]> {\r\n    let localUsers:User[] = getUsersFromLocalStorage();\r\n    if (localUsers!=null) {\r\n         return Observable.of(localUsers);\r\n    } else {\r\n            setUsersToLocalStorage(users);\r\n        return Observable.of(users);\r\n    }\r\n}\r\n\r\nexport function saveLocalStorageUser(user:User) {\r\n    let localUsers:User[] = getUsersFromLocalStorage();\r\n    if (localUsers!=null) {\r\n        if (user.userId!=null) {\r\n            let userIndex = localUsers.map(user => user.userId).indexOf(user.userId);\r\n            localUsers[userIndex] = user;\r\n        } else {\r\n           user.userId = getHighestId(localUsers) + 1;\r\n           localUsers.push(user);\r\n        }\r\n        setUsersToLocalStorage(localUsers);\r\n    }\r\n}\r\n\r\nexport function removeLocalStorageUser(userId:number) {\r\n    let localUsers:User[] = getUsersFromLocalStorage();\r\n    if (localUsers!=null) {\r\n        if (userId!=null) {\r\n            let userIndex = localUsers.map(user => user.userId).indexOf(userId);\r\n            if (userIndex>-1) {\r\n                localUsers.splice(userIndex,1);\r\n                setUsersToLocalStorage(localUsers);\r\n            }\r\n        }\r\n    }  \r\n}\r\n\r\nexport function readFromLocalStorageUser(userId:number):User {\r\n    if (localStorage.getItem(\"users\")) {\r\n        let currentUsers:User[] = JSON.parse(localStorage.getItem(\"users\"));\r\n        return currentUsers.filter((user:User) =>  user.userId === userId)[0];\r\n    }\r\n    return null;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/users/shared/users-localstorage.ts","import { Injectable } from '@angular/core';\r\nimport { Subject }    from 'rxjs/Subject';\r\n@Injectable()\r\nexport class UserFormTableService {\r\n  // Observable string sources\r\n  private updatedItemInList = new Subject<boolean>();\r\n  private editingItemInList = new Subject<number>();\r\n  // Observable string streams\r\n  updatedItemInList$ = this.updatedItemInList.asObservable();\r\n  editingItemInList$ = this.editingItemInList.asObservable();\r\n  // Service message commands\r\n  updatedItem() {\r\n    this.updatedItemInList.next(true);\r\n  }\r\n  editingItem(userId:number) {\r\n    this.editingItemInList.next(userId);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/users/user-form-table-communication.service.ts","import { Injectable }    from '@angular/core';\r\nimport { Headers, Http, Response } from '@angular/http';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/observable/throw';\r\n\r\nimport { User } from './shared/user';\r\n@Injectable()\r\nexport class UserService {\r\n  private headers = new Headers({'Content-Type': 'application/json'});\r\n  private usersUrl = 'api/users';  // URL to web api\r\n  constructor(private http: Http) { }\r\n  getUsers1(): Promise<User[]> {\r\n    return this.http.get(this.usersUrl)\r\n               .toPromise()\r\n               .then(\r\n                 response => \r\n                 { return response.json().data as User[]}\r\n                 )\r\n               .catch(this.handleError);\r\n  }\r\n  getUser1(id: number): Promise<User> {\r\n    const url = `${this.usersUrl}/${id}`;\r\n    return this.http.get(url)\r\n      .toPromise()\r\n      .then(response => response.json().data as User)\r\n      .catch(this.handleError);\r\n  }\r\n  delete1(userId: number): Promise<void> {\r\n    const url = `${this.usersUrl}/${userId}`;\r\n    return this.http.delete(url, {headers: this.headers})\r\n      .toPromise()\r\n      .then(() => null)\r\n      .catch(this.handleError);\r\n  }\r\n  getUsers(): User[]|any {\r\n    return this.http.get(this.usersUrl)\r\n               .map((res:any) => res.json().data as User[])\r\n               .catch(this.handleError);\r\n  }\r\n  getUser(id: number): Observable<User> | any {\r\n    //const url = `${this.usersUrl}/${id}`;\r\n    const url = `${this.usersUrl}`;\r\n    return this.http\r\n      .get(url)\r\n      .map((res:any) => res.json().data)\r\n      .catch(this.handleError);\r\n  }\r\n  delete(userId: number):  Observable<User> | any {\r\n    //const url = `${this.usersUrl}/${userId}`;\r\n    const url = `${this.usersUrl}`;\r\n    return this.http.post(url, {headers: this.headers})\r\n      .map((res:any) => res.json().data)\r\n      .catch(this.handleError);\r\n  }\r\n  save(user:User):Observable<User>|any {\r\n    if (user.userId) {\r\n      return this.update(user);\r\n    } else {\r\n      return this.create(user);\r\n    }\r\n  }\r\n  create(user: User): Observable<User> | any {\r\n    const url = `${this.usersUrl}/${user.userId}`;\r\n    return this.http\r\n      .post(url, JSON.stringify(user), {headers: this.headers})\r\n      .map(res => {\r\n          if (res.json()) \r\n              return res.json().data;\r\n            else\r\n              return user;\r\n            })\r\n      .catch(this.handleError);\r\n  }\r\n  update(user: User): Observable<User> | any {\r\n    const url = `${this.usersUrl}/${user.userId}`;\r\n    return this.http\r\n      .post(url, JSON.stringify(user), {headers: this.headers})\r\n      .map(res => {\r\n          if (res.json()) \r\n              return res.json().data;\r\n            else\r\n              return user;\r\n            })\r\n      .catch(this.handleError);\r\n  }\r\n  private handleError (error: Response | any):Observable<User> {\r\n    // In a real world app, you might use a remote logging infrastructure\r\n    let errMsg: string;\r\n    if (error instanceof Response) {\r\n      const body = error.json() || '';\r\n      const err = body.error || JSON.stringify(body);\r\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\r\n    } else {\r\n      errMsg = error.message ? error.message : error.toString();\r\n    }\r\n    console.log(errMsg);\r\n    return Observable.throw(errMsg);\r\n    //return errMsg;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/users/user.service.ts","import { Component, Output } from '@angular/core';\r\nimport {Subject} from 'rxjs/Subject';\r\n//import {Observable} from 'rxjs/Observable';\r\n\r\n@Component({\r\n  selector: 'app-modal',\r\n  template: `\r\n  <div (click)=\"onContainerClicked($event)\" class=\"modal fade\" tabindex=\"-1\" [ngClass]=\"{'in': visibleAnimate}\"\r\n       [ngStyle]=\"{'display': visible ? 'block' : 'none', 'opacity': visibleAnimate ? 1 : 0}\">\r\n    <div class=\"modal-dialog\">\r\n      <div class=\"modal-content\" >\r\n        <div class=\"modal-header\" >\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" (click)=\"hide()\">&times;</button>\r\n          <h4 >{{modalHeader}}</h4>\r\n        </div>\r\n        <div class=\"modal-body\" [innerHTML]=modalBody>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-default\" (click)=\"nodoit()\">No</button>\r\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"doit()\">Yes</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  `\r\n})\r\nexport class ModalComponent {\r\n\r\n    private clickStream = new Subject<boolean>();\r\n    //private clickStream = new Observable<boolean>();\r\n    @Output() blnResult = this.clickStream.asObservable();\r\n    //@Output() observable = this.clickStream;\r\n  public visible = false;\r\n  private visibleAnimate = true;\r\n\r\n  public modalHeader:string;\r\n  public modalBody:string;\r\n\r\n  public show(strHeader:string,strBody:string): void {\r\n    this.modalHeader = strHeader;\r\n    this.modalBody = strBody;\r\n    this.visible = true;\r\n    setTimeout(() => this.visibleAnimate = true, 100);\r\n  }\r\n\r\n  public hide(): void {\r\n    this.visibleAnimate = false;\r\n    setTimeout(() => this.visible = false, 300);\r\n  }\r\n  public doit() {\r\n       //this.clickStream = new Observable((observer:any)  => observer.next(true));\r\n       this.clickStream.next(true);\r\n       this.hide();\r\n  }\r\n  public nodoit() {\r\n       this.clickStream.next(false);\r\n      //this.clickStream = new Observable((observer:any)  => observer.next(false));\r\n       this.hide();\r\n  }\r\n\r\n  public onContainerClicked(event: MouseEvent): void {\r\n    if ((<HTMLElement>event.target).classList.contains('modal')) {\r\n      this.hide();\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/modal.component.ts","export class User {\r\n\r\n    constructor(\r\n        public userId: number = null,\r\n        public username: string = null,\r\n        public name: string = null,\r\n        public address: string = null,\r\n        public lat: number = null,\r\n        public long: number = null,\r\n        public city: string = null,\r\n        public phone: number = null,\r\n        public email: string = null\r\n    ){}\r\n    \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/users/shared/user.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 83;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 83\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\n\n\n\n@Component({\n  selector: 'my-app',\n  templateUrl: './app.component.html'\n})\n\nexport class AppComponent  { name = 'Angular'; }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule }    from '@angular/http';\n//import { AppRoutingModule } from './app-routing.module';\n//import { RouterModule, Routes } from '@angular/router';\n// Imports for loading & configuring the in-memory web api\nimport { InMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { InMemoryDataService }  from './users/in-memory-data.service';\n\nimport { AppComponent }  from './app.component';\nimport { PageNotFoundComponent }  from './not-found.component';\nimport { UserMainComponent } from './users/user-main.component';\nimport { UserFormComponent } from './users/user-form.component';\nimport { UsersTableComponent } from './users/users-table.component';\nimport { UserService }          from './users/user.service';\nimport { UserFormTableService }     from './users/user-form-table-communication.service';\n\nimport { FilterByPipe } from './shared/filterby.pipe'\nimport { SortByPipe } from './shared/sortby.pipe'\nimport { ModalComponent } from './shared/modal.component';\n/*\nconst appRoutes: Routes = [\n  { path: 'users', component: UserMainComponent },\n  { path: 'user/:id',      component: UserMainComponent },\n  { path: '',\n    redirectTo: '/users',\n    pathMatch: 'full'\n  },\n  { path: '**', component: PageNotFoundComponent }\n];\n*/\n\n@NgModule({\n  imports:      [\n    BrowserModule,\n    ReactiveFormsModule ,\n    HttpModule,\n    InMemoryWebApiModule.forRoot(InMemoryDataService,{ delay: 1000 }),\n    //RouterModule.forRoot(appRoutes)\n    //AppRoutingModule\n  ],\n  declarations: [ \n      AppComponent, \n      UserMainComponent,\n      UserFormComponent,\n      UsersTableComponent,\n      PageNotFoundComponent,\n      FilterByPipe,\n      SortByPipe,\n      ModalComponent ],\n  providers: [ \n      UserService,\n      UserFormTableService ],      \n  bootstrap:    [ AppComponent ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  template: '<h2>Current selection is not valid for this application</h2>'\r\n})\r\nexport class PageNotFoundComponent {}\n\n\n// WEBPACK FOOTER //\n// ./src/app/not-found.component.ts","import { Pipe, PipeTransform } from '@angular/core';\r\n@Pipe({\r\n    name: 'filterby',\r\n    pure: true\r\n    })\r\nexport class FilterByPipe implements PipeTransform {\r\n  transform(values: any, queryString: string): any {\r\n   \r\n    if (values!=null) {\r\n        return values.filter((user:any)=> Object.keys(user).map(key=>user[key]).some(x => new RegExp(queryString,'i').test(x)));\r\n    } else {\r\n        return null;\r\n    }\r\n   \r\n\r\n        \r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/filterby.pipe.ts","import { Pipe, PipeTransform } from '@angular/core';\r\n@Pipe({\r\n    name: 'sortby',\r\n    pure: true\r\n    })\r\nexport class SortByPipe implements PipeTransform {\r\n  transform(values: any[], fieldname: string, ascendingOrder: boolean): any[] {\r\n    if (values!=null) {\r\n        return values.sort((a: any, b: any) => {\r\n            let fieldAToCompare, fieldBToCompare;\r\n            if (typeof a[fieldname]== \"string\") {\r\n\t\t\t\tfieldAToCompare = a[fieldname].toLowerCase();\r\n\t\t\t\tfieldBToCompare = b[fieldname].toLowerCase();\r\n\t\t\t} else {\r\n\t\t\t\tfieldAToCompare = a[fieldname];\r\n\t\t\t\tfieldBToCompare = b[fieldname];\r\n\t\t\t}            \r\n            if (fieldAToCompare < fieldBToCompare) {\r\n                return (ascendingOrder?-1:1);\r\n            } else if (fieldAToCompare > fieldBToCompare) {\r\n                return (ascendingOrder?1:-1);\r\n            } else {\r\n                return 0;\r\n            }\r\n            });\r\n    } else {\r\n        return null;\r\n    }\r\n\r\n        \r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/sortby.pipe.ts","import { InMemoryDbService } from 'angular-in-memory-web-api';\r\nimport {User} from './shared/user'\r\n\r\nexport class InMemoryDataService implements InMemoryDbService {\r\n  createDb() {\r\n    let users = [\r\n      new User(1,\"PLewis\",\"Peter Lewis\",\"Brown Street 23\",0,0,\"London\",234234234,\"PLewis@hotmail.com\"),\r\n      new User(2,\"MJames\",\"Mary James\",\"Green Street 5\",0,0,\"London\",653148596,\"MJames@hotmail.com\"),\r\n      new User(3,\"BJohan\",\"Boris Joan\",\"Yellow Street 51\",0,0,\"Moscow\",668524152,\"BJohan@hotmail.com\"),\r\n      new User(4,\"DBirchy\",\"Doris Birchy\",\"Blue Street 5\",0,0,\"Paris\",669897452,\"DBirchy@hotmail.com\"),\r\n      new User(5,\"PDechaum\",\"Pauline Dechaum\",\"Chocolate Street 5\",0,0,\"Paris\",977415263,\"PDechaum@hotmail.com\"),\r\n      new User(6,\"GTomasi\",\"Gianna Tomasi\",\"Caesar Street 5\",0,0,\"Rome\",963254178,\"GTomasi@hotmail.com\")\r\n    ];\r\n    return {users};\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/users/in-memory-data.service.ts","import {  AbstractControl, } from '@angular/forms';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/of'\r\n\r\nimport { User } from './user'\r\nimport { UserService } from '../user.service';\r\nimport { getLocalStorageUsers } from './users-localstorage';\r\n\r\nlet emailTimeout:any;\r\n// FORM GROUP VALIDATORS\r\nexport const AsyncUniqueFieldValidator = (itemId:number,userobjectService:UserService,fieldname:string) => {\r\n    return (control:AbstractControl) => {\r\n      if (control.dirty) {\r\n        control.setErrors({CheckingDuplicatedItem: true});\r\n        clearTimeout(emailTimeout);\r\n        return new Promise((resolve) => {\r\n            emailTimeout = setTimeout(() => {\r\n              userobjectService.getUsers().subscribe((users:User[]) => {\r\n                getLocalStorageUsers(users).subscribe((users:User[]) => \r\n                  {\r\n                    if (users.some((user:User) => (user.userId!=itemId && user[fieldname].toLowerCase()==control.value.toLowerCase()))) {\r\n                      resolve({DuplicatedItem: true})\r\n                      } else {\r\n                        resolve(null);\r\n                      }\r\n                  });\r\n              });\r\n            }\r\n              , 100);\r\n          })\r\n      } else {\r\n        control.setErrors(null);\r\n        return new Promise(null);\r\n      }\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/users/shared/async-unique-field.validator.ts","import { FormGroup, AbstractControl } from '@angular/forms';\r\n\r\n// FORM GROUP VALIDATORS\r\nexport function matchingPasswords(): any {\r\n    return (group: FormGroup):any => {\r\n      let passwordControl: AbstractControl = group.controls['password'];\r\n      let confirmPasswordControl: AbstractControl = group.controls['confirmPassword'];\r\n      let password:string = passwordControl.value; // to get value in input tag\r\n      let confirmPassword:string = confirmPasswordControl.value; // to get value in input tag\r\n\r\n      if(password != confirmPassword) {\r\n          confirmPasswordControl.setErrors( {MatchPassword: true} );\r\n      } else {\r\n          confirmPasswordControl.setErrors(null);\r\n          return null\r\n      }\r\n\r\n  } \r\n } \n\n\n// WEBPACK FOOTER //\n// ./src/app/users/shared/password.validator.ts","import { Component, Output, EventEmitter, OnInit} from '@angular/core';\r\nimport { NgForm, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n//import { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport 'rxjs/add/operator/switchMap';\r\n\r\nimport { User } from './shared/user'\r\nimport { matchingPasswords } from './shared/password.validator';\r\nimport { AsyncUniqueFieldValidator } from './shared/async-unique-field.validator';\r\nimport { getLocalStorageUsers, saveLocalStorageUser, readFromLocalStorageUser } from './shared/users-localstorage';\r\nimport { UserService } from './user.service';\r\nimport { UserFormTableService }     from './user-form-table-communication.service';\r\n\r\n\r\n@Component({\r\n  selector: 'user-form',\r\n  templateUrl: './user-form.component.html'\r\n})\r\nexport class UserFormComponent implements OnInit{\r\n  public user: User; // our model\r\n  public users: User[];\r\n  public errors: string[] = [];\r\n  public submitting: boolean = false;\r\n  userForm : FormGroup;\r\n  @Output() onSubmitted = new EventEmitter<boolean>();\r\n\r\n\r\n  constructor(private userService: UserService, private fb: FormBuilder, \r\n      //private route: ActivatedRoute, private router: Router,\r\n      private userFormTableService: UserFormTableService) { \r\n        this.user = new User();\r\n        userFormTableService.editingItemInList$.subscribe(\r\n          (userId:number) => {\r\n            this.user = null;\r\n            this.userService.getUser(userId).subscribe(\r\n              (user: User) => {\r\n                if (userId!=null && !isNaN(userId)) {\r\n                  this.user = readFromLocalStorageUser(userId);\r\n                }\r\n                if (this.user==null) {\r\n                  this.user = new User();\r\n                }\r\n                this.revert();\r\n            });\r\n          });\r\n    }\r\n\r\n  createForm() {\r\n      this.userForm = this.fb.group({\r\n        userId: [null],\r\n        name: [null, Validators.compose([Validators.required, Validators.minLength(5), Validators.maxLength(90)]) ],\r\n        username: [null, Validators.compose([Validators.required, Validators.minLength(5), Validators.maxLength(25)])],\r\n        address: [null, Validators.compose([Validators.required, Validators.maxLength(80)])],\r\n        city: [null, Validators.compose([Validators.required, Validators.maxLength(50)])],\r\n        phone: [null, Validators.compose([Validators.required, Validators.pattern('^\\\\d{9}$')])],\r\n        email: [null, Validators.compose([Validators.required, Validators.email])],\r\n        password: [null],\r\n        confirmPassword:[null]\r\n      }, {\r\n      validator: matchingPasswords() // your validation method\r\n    });\r\n  }\r\n \r\n  addNewUser() {\r\n    this.user = new User();\r\n    this.revert();\r\n  }\r\n  revert() {\r\n    this.userForm.reset(\r\n      this.user\r\n    );\r\n    this.userForm.controls['email'].setAsyncValidators(AsyncUniqueFieldValidator(this.user.userId,this.userService,\"email\"));\r\n    this.userForm.controls['email'].updateValueAndValidity();\r\n    this.userForm.controls['username'].setAsyncValidators(AsyncUniqueFieldValidator(this.user.userId,this.userService,\"username\"));\r\n    this.userForm.controls['username'].updateValueAndValidity();\r\n    if (this.userForm.controls['password']) {\r\n        if (this.user==null || this.user.userId==null) {\r\n          this.userForm.controls['password'].setValidators(Validators.compose([Validators.required,Validators.pattern('^((?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{8,})$')]))\r\n        } else {\r\n          this.userForm.controls['password'].setValidators(null);\r\n        }\r\n        this.userForm.controls['password'].updateValueAndValidity();\r\n    }\r\n  }\r\n  ngOnInit() {\r\n    this.createForm();\r\n    this.revert();\r\n  }\r\n\r\n   onSubmit(): void {\r\n    this.errors = [];\r\n    this.submitting = true;\r\n    if (this.userForm.valid) {\r\n      this.userService.save(this.userForm.value).subscribe(\r\n        (user:User) => {\r\n            saveLocalStorageUser(user);\r\n            this.submitting = false;\r\n            this.userFormTableService.updatedItem();\r\n            this.addNewUser();\r\n            \r\n          },\r\n        (error:any) => {this.errors.push(error),this.submitting=false}\r\n        \r\n      );\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/users/user-form.component.ts","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  template: `\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-5\">\r\n                    <user-form></user-form>\r\n                </div>\r\n                <div class=\"col-sm-7\">\r\n                    <user-table></user-table>\r\n                </div>\r\n            <div>\r\n            `})\r\n\r\n           \r\nexport class UserMainComponent {}\n\n\n// WEBPACK FOOTER //\n// ./src/app/users/user-main.component.ts","import { Component,  ViewChild, OnInit} from '@angular/core';\r\nimport { Observable }        from 'rxjs/Observable';\r\nimport { Subject }           from 'rxjs/Subject';\r\nimport {Subscription} from \"rxjs\";\r\n// Observable class extensions\r\nimport 'rxjs/add/observable/of';\r\n// Observable operators\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/debounceTime';\r\nimport 'rxjs/add/operator/distinctUntilChanged';\r\n\r\n//import { Router } from '@angular/router';\r\n\r\n\r\nimport { User } from './shared/user'\r\nimport { UserService } from './user.service';\r\nimport { getLocalStorageUsers, saveLocalStorageUser, removeLocalStorageUser } from './shared/users-localstorage';\r\nimport { UserFormTableService }     from './user-form-table-communication.service';\r\n\r\nimport { ModalComponent } from '../shared/modal.component';\r\n\r\n\r\n@Component({\r\n  selector: 'user-table',\r\n  templateUrl: './users-table.component.html'\r\n})\r\nexport class UsersTableComponent implements OnInit {\r\n  public users: Observable<User[]>;\r\n\r\n  @ViewChild(ModalComponent)\r\n  public readonly modal: ModalComponent;\r\n\r\n  private subscription:Subscription;\r\n  public showFilterBox:boolean=false;\r\n \r\n  public sortedByFieldName:String=\"userId\";\r\n  public ascendingOrder:boolean=true;\r\n\r\n  constructor(private userService: UserService, \r\n            //private router: Router, \r\n            private userFormTableService: UserFormTableService) {\r\n      userFormTableService.updatedItemInList$.subscribe(\r\n        (isDone:boolean) => {\r\n          if (isDone) {\r\n            this.ngOnInit();\r\n          }\r\n        }); \r\n    }\r\n\r\n  ngOnInit():void {\r\n    this.users = null;\r\n    this.userService.getUsers().subscribe((users:User[]) => {\r\n          this.users = getLocalStorageUsers(users)\r\n    });\r\n  } \r\n\r\n\r\n    sortingByColumn(fieldName:string) {\r\n      if (this.sortedByFieldName==fieldName) {\r\n        this.ascendingOrder=!this.ascendingOrder;\r\n      } else {\r\n        this.ascendingOrder=true;\r\n      }\r\n      this.sortedByFieldName=fieldName;\r\n    }\r\n\r\n    public showRemoveModalDlg(userToRemove:User){\r\n       let infoTemplate= `\r\n            Do you want to remove user <strong> ${userToRemove.username} </strong> ?\r\n             <dl class=\"dl-horizontal\">\r\n                    <dt><span class=\"glyphicon glyphicon glyphicon-user\" ></span></dt>\r\n                    <dd>${userToRemove.name}</dd>\r\n                    <dt><span class=\"glyphicon glyphicon glyphicon-map-marker\" ></span></dt>\r\n                    <dd>${userToRemove.address} , ${userToRemove.city}</dd>\r\n                    <dt><span class=\"glyphicon glyphicon glyphicon-phone\" ></span></dt>\r\n                    <dd>${userToRemove.phone}</dd>\r\n                    <dt><span>@</span></dt>\r\n                    <dd>${userToRemove.email}</dd>\r\n            </dl>`\r\n        this.modal.show('Removing users',infoTemplate);\r\n        this.subscription = this.modal.blnResult.subscribe((blnRemove:boolean) => {\r\n            if (blnRemove) {\r\n                 this.userService.delete(userToRemove.userId).subscribe(\r\n                    (user:User) => {removeLocalStorageUser(userToRemove.userId);this.ngOnInit()},\r\n                    (error:any) => {console.log(error)}\r\n                  );\r\n            }\r\n            // unsubscribe is necessary such that the observable doesn't keep racking up listeners\r\n            this.subscription.unsubscribe();\r\n        });\r\n    }\r\n\r\n \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/users/users-table.component.ts"],"sourceRoot":""}